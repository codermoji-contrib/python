os: windows # windows | linux | osx
level: 1 # Difficulty level 1-5
status: active # could be active | disabled | draft
setup:
    script: mkfs.py  # This gets run to set up the env for term cmds.
sequence: # Must be ordered (sequence!)
    - question_format: md
      question: |
        # Dictionary

        Let's create a `dict`. Make one called `score`, that contains these
        mappings:

        - Tom: `0`
        - Jane: `0`
        - Fred: `0`

        Use the `dict()` call.
      filesystem: fs1.yaml
      editor:
          - {name: main.py, contents: ""}
      answer: # This is the answer for this q, and setup for next q
            editor:
                - {name: main.py, contents: main1.py}
    - question_format: md
      question: >
        # Dictionary

        Great! Add a line to display all the scores when your program
        is run.
      answer: # This is the answer for this q, and setup for next q
            editor:
                - {name: main.py, contents: main2.py}
    - question_format: md
      question: >
        # Dictionary

        Now run your program.
      answer: # This is the answer for this q, and setup for next q
            term_format: txt
            term: "python main.py"
            termoutput: t1.txt
    - question_format: md
      question: >
        # Dictionary

        Add another line to change Jane's score to 5.
      answer: # This is the answer for this q, and setup for next q
            editor:
                - {name: main.py, contents: main3.py}
    - question_format: md
      question: >
        # Dictionary

        Add a line to change Fred's score to 3. (poor Tom)
      answer: # This is the answer for this q, and setup for next q
            editor:
                - {name: main.py, contents: main4.py}
    - question_format: md
      question: >
        # Dictionary

        Add one more line that will show the updated scores when
        you run.

        (Otherwise all you would see is the first `print` on line 2...)
      answer: # This is the answer for this q, and setup for next q
            editor:
                - {name: main.py, contents: main5.py}
    - question_format: md
      question: >
        # Dictionary

        Now run your program!
      answer: # This is the answer for this q, and setup for next q
            term_format: txt
            term: "python main.py"
            termoutput: t2.txt

